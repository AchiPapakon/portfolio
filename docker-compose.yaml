services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      mynetwork:
        ipv4_address: "10.56.1.21"
  mysql:
    image: mysql:8.4.6
    env_file: .env.docker.server
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      mynetwork:
        ipv4_address: "10.56.1.20"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
      interval: 5s
  frontend:
    image: nginx:1.29-perl
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    networks:
      mynetwork:
        ipv4_address: "10.56.1.22"
  certbot:
    image: certbot/certbot
    env_file: .env
    volumes: 
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${CERTBOT_EMAIL} -d ${CERTBOT_DOMAIN} --agree-tos
networks:
  mynetwork:
    ipam:
      driver: default
      config:
        - subnet: "10.56.1.0/24"